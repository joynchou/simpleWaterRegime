C51 COMPILER V8.05a   LCD5510_V2                                                           08/09/2017 16:33:13 PAGE 1   


C51 COMPILER V8.05a, COMPILATION OF MODULE LCD5510_V2
OBJECT MODULE PLACED IN .\LCD5510_V2.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\HARDWARE\DISPLAY\LCD5110\LCD5510_V2.C LARGE WARNINGLEVEL(0) BROWSE DE
                    -BUG OBJECTEXTEND PRINT(.\LCD5510_V2.lst) TABS(2) OBJECT(.\LCD5510_V2.obj)

line level    source

   1          #include <stdio.h>
   2          #include <stdlib.h>
   3          #include "LCD5510_V2.H"
   4          extern unsigned char code Font_code[][6] = {
   5            { 0x00,0x00,0x00,0x00,0x00,0x00 },// (0)
   6            { 0x00,0x00,0x00,0x4F,0x00,0x00 },//!(1)
   7            { 0x00,0x00,0x07,0x00,0x07,0x00 },//"(2)
   8            { 0x00,0x14,0x7F,0x14,0x7F,0x14 },//#(3)
   9            { 0x00,0x24,0x2A,0x7F,0x2A,0x12 },//$(4)
  10            { 0x00,0x23,0x13,0x08,0x64,0x62 },//%(5)
  11            { 0x00,0x36,0x49,0x55,0x22,0x50 },//&(6)
  12            { 0x00,0x00,0x05,0x03,0x00,0x00 },//'(7)
  13            { 0x00,0x00,0x1C,0x22,0x41,0x00 },//((8)
  14            { 0x00,0x00,0x41,0x22,0x1C,0x00 },//)(9)
  15            { 0x00,0x14,0x08,0x3E,0x08,0x14 },//*(10)
  16            { 0x00,0x08,0x08,0x3E,0x08,0x08 },//+(11)
  17            { 0x00,0x00,0x50,0x30,0x00,0x00 },//,(12)
  18            { 0x00,0x08,0x08,0x08,0x08,0x08 },//-(13)
  19            { 0x00,0x00,0x60,0x60,0x00,0x00 },//.(14)
  20            { 0x00,0x20,0x10,0x08,0x04,0x02 },///(15)
  21            { 0x00,0x3E,0x51,0x49,0x45,0x3E },//0(16)
  22            { 0x00,0x00,0x42,0x7F,0x40,0x00 },//1(17)
  23            { 0x00,0x42,0x61,0x51,0x49,0x46 },//2(18)
  24            { 0x00,0x21,0x41,0x45,0x4B,0x31 },//3(19)
  25            { 0x00,0x18,0x14,0x12,0x7F,0x10 },//4(20)
  26            { 0x00,0x27,0x45,0x45,0x45,0x39 },//5(21)
  27            { 0x00,0x3C,0x4A,0x49,0x49,0x30 },//6(22)
  28            { 0x00,0x01,0x71,0x09,0x05,0x03 },//7(23)
  29            { 0x00,0x36,0x49,0x49,0x49,0x36 },//8(24)
  30            { 0x00,0x06,0x49,0x49,0x29,0x1E },//9(25)
  31            { 0x00,0x00,0x36,0x36,0x00,0x00 },//:(26)
  32            { 0x00,0x00,0x56,0x36,0x00,0x00 },//;(27)
  33            { 0x00,0x08,0x14,0x22,0x41,0x00 },//<(28)
  34            { 0x00,0x14,0x14,0x14,0x14,0x14 },//=(29)
  35            { 0x00,0x00,0x41,0x22,0x14,0x08 },//>(30)
  36            { 0x00,0x02,0x01,0x51,0x09,0x06 },//?(31)
  37            { 0x00,0x32,0x49,0x79,0x41,0x3E },//@(32)
  38            { 0x00,0x7E,0x11,0x11,0x11,0x7E },//A(33)
  39            { 0x00,0x7F,0x49,0x49,0x49,0x3E },//B(34)
  40            { 0x00,0x3E,0x41,0x41,0x41,0x22 },//C(35)
  41            { 0x00,0x7F,0x41,0x41,0x22,0x1C },//D(36)
  42            { 0x00,0x7F,0x49,0x49,0x49,0x41 },//E(37)
  43            { 0x00,0x7F,0x09,0x09,0x09,0x01 },//F(38)
  44            { 0x00,0x3E,0x41,0x49,0x49,0x7A },//G(39)
  45            { 0x00,0x7F,0x08,0x08,0x08,0x7F },//H(40)
  46            { 0x00,0x00,0x41,0x7F,0x41,0x00 },//I(41)
  47            { 0x00,0x20,0x40,0x41,0x3F,0x01 },//J(42)
  48            { 0x00,0x7F,0x08,0x14,0x22,0x41 },//K(43)
  49            { 0x00,0x7F,0x40,0x40,0x40,0x40 },//L(44)
  50            { 0x00,0x7F,0x02,0x04,0x02,0x7F },//M(45)
  51            { 0x00,0x7F,0x04,0x08,0x10,0x7F },//N(46)
  52            { 0x00,0x3E,0x41,0x41,0x41,0x3E },//O(47)
  53            { 0x00,0x7F,0x09,0x09,0x09,0x06 },//P(48)
  54            { 0x00,0x3E,0x41,0x51,0x21,0x5E },//Q(49)
C51 COMPILER V8.05a   LCD5510_V2                                                           08/09/2017 16:33:13 PAGE 2   

  55            { 0x00,0x7F,0x09,0x19,0x29,0x46 },//R(50)
  56            { 0x00,0x46,0x49,0x49,0x49,0x31 },//S(51)
  57            { 0x00,0x01,0x01,0x7F,0x01,0x01 },//T(52)
  58            { 0x00,0x3F,0x40,0x40,0x40,0x3F },//U(53)
  59            { 0x00,0x1F,0x20,0x40,0x20,0x1F },//V(54)
  60            { 0x00,0x3F,0x40,0x38,0x40,0x3F },//W(55)
  61            { 0x00,0x63,0x14,0x08,0x14,0x63 },//X(56)
  62            { 0x00,0x03,0x04,0x78,0x04,0x03 },//Y(57)
  63            { 0x00,0x61,0x51,0x49,0x45,0x43 },//Z(58)
  64            { 0x00,0x00,0x7F,0x41,0x41,0x00 },//[(59)
  65            { 0x00,0x15,0x16,0x7C,0x16,0x15 },//\(60)
  66            { 0x00,0x00,0x41,0x41,0x7F,0x00 },//](61)
  67            { 0x00,0x04,0x02,0x01,0x02,0x04 },//^(62)
  68            { 0x00,0x40,0x40,0x40,0x40,0x40 },//_(63)
  69            { 0x00,0x00,0x01,0x02,0x04,0x00 },//`(64)
  70            { 0x00,0x20,0x54,0x54,0x54,0x78 },//a(65)
  71            { 0x00,0x7F,0x48,0x44,0x44,0x38 },//b(66)
  72            { 0x00,0x38,0x44,0x44,0x44,0x20 },//c(67)
  73            { 0x00,0x38,0x44,0x44,0x48,0x7F },//d(68)
  74            { 0x00,0x38,0x54,0x54,0x54,0x18 },//e(69)
  75            { 0x00,0x08,0x7E,0x09,0x01,0x02 },//f(70)
  76            { 0x00,0x0C,0x52,0x52,0x52,0x3E },//g(71)
  77            { 0x00,0x7F,0x08,0x04,0x04,0x78 },//h(72)
  78            { 0x00,0x00,0x44,0x7D,0x40,0x00 },//i(73)
  79            { 0x00,0x20,0x40,0x44,0x3D,0x00 },//j(74)
  80            { 0x00,0x7F,0x10,0x28,0x44,0x00 },//k(75)
  81            { 0x00,0x00,0x41,0x7F,0x40,0x00 },//l(76)
  82            { 0x00,0x7E,0x02,0x0C,0x02,0x7C },//m(77)
  83            { 0x00,0x7E,0x04,0x02,0x02,0x7C },//n(78)
  84            { 0x00,0x38,0x44,0x44,0x44,0x38 },//o(79)
  85            { 0x00,0x7C,0x14,0x14,0x14,0x08 },//p(80)
  86            { 0x00,0x08,0x14,0x14,0x18,0x7C },//q(81)
  87            { 0x00,0x7C,0x08,0x04,0x04,0x08 },//r(82)
  88            { 0x00,0x48,0x54,0x54,0x54,0x20 },//s(83)
  89            { 0x00,0x04,0x3F,0x44,0x40,0x20 },//t(84)
  90            { 0x00,0x3C,0x40,0x40,0x20,0x7C },//u(85)
  91            { 0x00,0x1C,0x20,0x40,0x20,0x1C },//v(86)
  92            { 0x00,0x3C,0x40,0x30,0x40,0x3C },//w(87)
  93            { 0x00,0x44,0x28,0x10,0x28,0x44 },//x(88)
  94            { 0x00,0x0C,0x50,0x50,0x50,0x3C },//y(89)
  95            { 0x00,0x44,0x64,0x54,0x4C,0x44 },//z(90)
  96            { 0x00,0x00,0x08,0x36,0x41,0x00 },//{(91)
  97            { 0x00,0x00,0x00,0x7F,0x00,0x00 },//|(92)
  98            { 0x00,0x00,0x41,0x36,0x08,0x00 },//}(93)
  99            { 0x00,0x08,0x04,0x08,0x10,0x08 },//~(94)
 100            { 0x00,0x08,0x08,0x2A,0x1C,0x08 },//→(127)
 101            { 0x00,0x08,0x1C,0x2A,0x08,0x08 },//←(128)
 102            { 0x00,0x04,0x02,0x7F,0x02,0x04 },//↑(129)
 103            { 0x00,0x10,0x20,0x7F,0x20,0x10 },//↓(130)
 104            { 0x00,0x1C,0x2A,0x32,0x2A,0x1C },//笑面(131)
 105            { 0x00,0x1C,0x22,0x44,0x22,0x1C } };//爱心(132)
 106          
 107                              /*--------------------------------------------------------------*/
 108                              //写入一个字节(数据或指令)
 109                              //wbyte:  待写入的数据
 110                              //dat_cmd:  1-数据, 0-指令
 111          void LCD_write_byte(unsigned char wbyte, unsigned char dat_cmd)
 112          {
 113   1        unsigned char i;
 114   1      
 115   1        LCD_CS = 0;     //使能
 116   1        LCD_DC = dat_cmd; //1-数据  //0-指令
C51 COMPILER V8.05a   LCD5510_V2                                                           08/09/2017 16:33:13 PAGE 3   

 117   1      
 118   1        for (i = 8; i; i--) //8位数据, 先高后低
 119   1        {
 120   2          if (wbyte & 0x80) { LCD_DIN = 1; }
 121   2          else { LCD_DIN = 0; }
 122   2      
 123   2          LCD_CLK = 0;
 124   2          wbyte <<= 1;  //移位(延时)
 125   2          LCD_CLK = 1;  //上升沿写入
 126   2        }
 127   1      
 128   1        LCD_CS = 1;     //禁止
 129   1      }
 130          
 131          
 132          /*--------------------------------------------------------------*/
 133          //写入n个字节(数据)(ROM)
 134          //*wbyte: 待写入的数据指针
 135          //num:    待写入的数据个数
 136          /*void LCD_write_nbyte(unsigned char code *wbyte, unsigned char num)
 137          {
 138          unsigned char i, j;
 139          unsigned char temp;
 140          
 141          LCD_CS = 0;     //使能
 142          LCD_DC = 1;     //数据
 143          
 144          for(j = 0; j < num; j++)//num个数据
 145          {
 146          temp = wbyte[j];
 147          for(i = 8; i; i--)  //8位数据, 先高后低
 148          {
 149          if(temp & 0x80) {LCD_DIN = 1;}
 150          else      {LCD_DIN = 0;}
 151          
 152          LCD_CLK = 0;
 153          temp <<= 1;   //移位(延时)
 154          LCD_CLK = 1;  //上升沿写入
 155          }
 156          }
 157          
 158          LCD_CS = 1;     //禁止
 159          }
 160          
 161          
 162          /*--------------------------------------------------------------*/
 163          //显示清屏(清DDRAM)
 164          void LCD_clr_scr(void)
 165          {
 166   1        unsigned int i;
 167   1      
 168   1        LCD_write_cmd(X_Col_Addr);
 169   1        LCD_write_cmd(Y_Page_Addr);
 170   1      
 171   1        for (i = 504; i; i--) LCD_write_dat(0x00);
 172   1      }
 173          
 174          
 175          /*--------------------------------------------------------------*/
 176          //显示清行
 177          //num:  0 - 5
 178          void LCD_clr_row(unsigned char num)
C51 COMPILER V8.05a   LCD5510_V2                                                           08/09/2017 16:33:13 PAGE 4   

 179          {
 180   1        unsigned char i;
 181   1      
 182   1        LCD_pos_byte(0, num);
 183   1        for (i = 84; i; i--) LCD_write_dat(0x00);
 184   1      }
 185          
 186          
 187          /*--------------------------------------------------------------*/
 188          //液晶字节定位(1*1)
 189          //液晶规划:
 190          //x: 0 - 83
 191          //y: 0 - 5
 192          void LCD_pos_byte(unsigned char x, unsigned char y)
 193          {
 194   1        x |= X_Col_Addr;
 195   1        y |= Y_Page_Addr;
 196   1        LCD_write_cmd(x); //列地址
 197   1        LCD_write_cmd(y); //页地址
 198   1      }
 199          
 200          
 201          /*--------------------------------------------------------------*/
 202          //液晶字符输出(6*8字体)
 203          //x: 0 - 13
 204          //y: 0 - 5
 205          void LCD_printc(unsigned char x, unsigned char y, unsigned char c_dat)
 206          {
 207   1        unsigned char i;
 208   1      
 209   1        c_dat -= 32;    //查表
 210   1        x *= 6;       //宽6
 211   1      
 212   1        LCD_pos_byte(x, y); //坐标
 213   1        for (i = 0; i < 6; i++) LCD_write_dat(Font_code[c_dat][i]);
 214   1      }
 215          
 216          
 217          /*--------------------------------------------------------------*/
 218          //液晶字符串输出(6*8字体)
 219          //x: 0 - 13
 220          //y: 0 - 5
 221          void LCD_prints(unsigned char x, unsigned char y, unsigned char *s_dat)
 222          {
 223   1        while (*s_dat && x < 14) { LCD_printc(x++, y, *s_dat); s_dat++; }
 224   1      }
 225          
 226          
 227          /*--------------------------------------------------------------*/
 228          //液晶字符串输出,自动换行(6*8字体)
 229          //x: 0 - 13
 230          //y: 0 - 5
 231          void LCD_printsl(unsigned char x, unsigned char y, unsigned char *s_dat)
 232          {
 233   1        while (*s_dat)
 234   1        {
 235   2          LCD_printc(x++, y, *s_dat);
 236   2          s_dat++;
 237   2          if (x == 14) { x = 0; y++; }
 238   2          if (y == 6) { y = 0; }
 239   2        }
 240   1      }
C51 COMPILER V8.05a   LCD5510_V2                                                           08/09/2017 16:33:13 PAGE 5   

 241          void LCD_printNum_I(u8 x, u8 y, int num,u8 numLength)
 242          {
 243   1        u8 *str=malloc(numLength+2); //根据数字位数动态生成
 244   1      //  u8  str[7];
 245   1        sprintf(str, " % 4d", num);
 246   1        LCD_printsl(x, y, str);
 247   1        free(str);
 248   1      }
 249          void LCD_printNum_F(u8 x, u8 y, float num,u8 numLength, u8 accuracy)
 250          {
 251   1        u8 *str=malloc(numLength+accuracy+3);
 252   1      //  u8 str[7];
 253   1        sprintf(str, " % 4f", num);
 254   1        LCD_printsl(x, y, str);
 255   1        free(str);
 256   1      }
 257          
 258          /*--------------------------------------------------------------*/
 259          //复位LCD5510
 260          /*void LCD_reset_5510(void)
 261          {
 262          LCD_clr_scr();        //清全屏
 263          
 264          LCD_write_cmd(0x25);    //省电模式, 水平寻址, 扩展指令
 265          LCD_write_cmd(0x04);    //VLCD温度系数0
 266          LCD_write_cmd(0x10);    //设置偏置系统(BSx)
 267          LCD_write_cmd(0xc0);    //设置电压VLCD = 3.06 + 0.06*Vop;
 268          
 269          LCD_write_cmd(0x24);    //省电模式, 水平寻址, 常规指令
 270          LCD_write_cmd(0x08);    //显示空白
 271          LCD_write_cmd(Y_Page_Addr); //起始页地址0
 272          LCD_write_cmd(X_Col_Addr);  //起始列地址0
 273          }
 274          
 275          
 276          /*--------------------------------------------------------------*/
 277          //初始化LCD5510
 278          void LCD5510_Init(void)
 279          {
 280   1        GPIO_InitTypeDef    GPIO_InitStructure;     //设置管脚
 281   1        GPIO_InitStructure.Mode = GPIO_PullUp;
 282   1        GPIO_InitStructure.Pin = GPIO_Pin_0 || GPIO_Pin_1 || GPIO_Pin_2 || GPIO_Pin_3 || GPIO_Pin_4;    //lcd5110
 283   1        GPIO_Inilize(GPIO_P5, &GPIO_InitStructure);
 284   1        LCD_reset_hard;       //硬件复位
 285   1                      //  LCD_reset_soft;       //软件复位
 286   1      
 287   1        LCD_write_cmd(0x21);    //工作模式, 水平寻址, 扩展指令
 288   1        LCD_write_cmd(0x06);    //VLCD温度系数2
 289   1        LCD_write_cmd(0x13);    //设置偏置系统(BSx) 1:48
 290   1        LCD_write_cmd(0xc8);    //设置电压VLCD = 3.06 + 0.06*Vop, 对比度调整
 291   1      
 292   1        LCD_write_cmd(0x20);    //工作模式, 水平寻址, 常规指令
 293   1        LCD_write_cmd(0x0c);    //普通模式
 294   1        LCD_write_cmd(Y_Page_Addr); //起始页地址0
 295   1        LCD_write_cmd(X_Col_Addr);  //起始列地址0
 296   1        LCD_clr_scr();        //清全屏
 297   1      }
 298          
 299          /*--------------------------------------------------------------*/
 300          
 301          
 302          
C51 COMPILER V8.05a   LCD5510_V2                                                           08/09/2017 16:33:13 PAGE 6   

 303          
 304          
 305          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    588    ----
   CONSTANT SIZE    =    618    ----
   XDATA SIZE       =   ----      31
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
