C51 COMPILER V8.05a   PCA                                                                  08/09/2017 16:25:16 PAGE 1   


C51 COMPILER V8.05a, COMPILATION OF MODULE PCA
OBJECT MODULE PLACED IN .\PCA.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\HARDWARE\COMMON_HARDWARE\BSP\PCA\PCA.c LARGE WARNINGLEVEL(0) BROWSE D
                    -EBUG OBJECTEXTEND PRINT(.\PCA.lst) TABS(2) OBJECT(.\PCA.obj)

line level    source

   1          /************************************************************
   2          * 组织名称： (C), 1988-1999, Tech. Co., Ltd.
   3          * 文件名称: test.cpp
   4          * 作者:
   5          * 版本 :
   6          * 日期:
   7          * 描述: // 模块描述
   8          * 主要函数及其功能 : // 主要函数及其功能
   9            1. -------
  10          * 历史修改记录: // 历史修改记录
  11          * <作者> <时间> <版本 > <描述>
  12          * David 96/10/12 1.0 build this moudle
  13          ***********************************************************/
  14          #include    "PCA.h"
  15          bit     B_Capture0,B_Capture1,B_Capture2;
  16          u8      PCA0_mode,PCA1_mode,PCA2_mode;
  17          u16     CCAP0_tmp,PCA_Timer0;
  18          u16     CCAP1_tmp,PCA_Timer1;
  19          u16     CCAP2_tmp,PCA_Timer2;
  20          /*************  ????    **************
  21          ******************************************/
  22          u16 PWM0_low;   //PWM??????PCA??????, ???????
  23          u16 PWM1_low;   //PWM??????PCA??????, ???????
  24          u16 PWM2_low;   //PWM??????PCA??????, ???????
  25          //========================================================================
  26          // ??: void PWMn_SetHighReg(unsigned int high)
  27          // ??: ????????
  28          // ??: high:    ?????,?PWM??????PCA???????
  29          // ??: ?
  30          // ??: VER1.0
  31          // ??: 2013-5-15
  32          // ??:
  33          //========================================================================
  34          void PWMn_Update(u8 PCA_id, u16 high)
  35          {
  36   1          if(PCA_id == PCA0)
  37   1          {
  38   2              if(high > PWM0_HIGH_MAX)
  39   2              {
  40   3                  high = PWM0_HIGH_MAX;    //?????????????,?????????
  41   3              }
  42   2              if(high < PWM0_HIGH_MIN)
  43   2              {
  44   3                  high = PWM0_HIGH_MIN;    //?????????????,???????2?
  45   3              }
  46   2              CR = 0;                         //??PCA?
  47   2              PCA_Timer0 = high;              //???????,??????????
  48   2              PWM0_low = PWM0_DUTY - high;    //?????PWM??????PCA???????
  49   2              CR = 1;                         //??PCA?
  50   2          }
  51   1          else if(PCA_id == PCA1)
  52   1          {
  53   2              if(high > PWM1_HIGH_MAX)
  54   2              {
C51 COMPILER V8.05a   PCA                                                                  08/09/2017 16:25:16 PAGE 2   

  55   3                  high = PWM1_HIGH_MAX;    //?????????????,?????????
  56   3              }
  57   2              if(high < PWM1_HIGH_MIN)
  58   2              {
  59   3                  high = PWM1_HIGH_MIN;    //?????????????,???????2?
  60   3              }
  61   2              CR = 0;                         //??PCA?
  62   2              PCA_Timer1 = high;              //???????,??????????
  63   2              PWM1_low = PWM1_DUTY - high;    //?????PWM??????PCA???????
  64   2              CR = 1;                         //??PCA?
  65   2          }
  66   1          else if(PCA_id == PCA2)
  67   1          {
  68   2              if(high > PWM2_HIGH_MAX)
  69   2              {
  70   3                  high = PWM2_HIGH_MAX;    //?????????????,?????????
  71   3              }
  72   2              if(high < PWM2_HIGH_MIN)
  73   2              {
  74   3                  high = PWM2_HIGH_MIN;    //?????????????,???????2?
  75   3              }
  76   2              CR = 0;                     //??PCA?
  77   2              PCA_Timer2 = high;                      //???????,??????????
  78   2              PWM2_low = PWM2_DUTY - high;                //?????PWM??????PCA???????
  79   2              CR = 1;                     //??PCA?
  80   2          }
  81   1      }
  82          //========================================================================
  83          // ??: UpdatePwm(u8 PCA_id, u8 pwm_value)
  84          // ??: ??PWM?.
  85          // ??: PCA_id: PCA??. ?? PCA0,PCA1,PCA2,PCA_Counter
  86          //       pwm_value: pwm?, ????????????.
  87          // ??: none.
  88          // ??: V1.0, 2012-11-22
  89          //========================================================================
  90          /*
  91          void    UpdatePwm(u8 PCA_id, u8 pwm_value)
  92          {
  93              if(PCA_id == PCA0)      CCAP0H = pwm_value;
  94              else if(PCA_id == PCA1) CCAP1H = pwm_value;
  95              else if(PCA_id == PCA2) CCAP2H = pwm_value;
  96          }
  97          */
  98          //========================================================================
  99          // ??: void PCA_Init(PCA_id, PCA_InitTypeDef *PCAx)
 100          // ??: PCA?????.
 101          // ??: PCA_id: PCA??. ?? PCA0,PCA1,PCA2,PCA_Counter
 102          //       PCAx: ????,???PCA.h????.
 103          // ??: none.
 104          // ??: V1.0, 2012-11-22
 105          //========================================================================
 106          void    PCA_Init(u8 PCA_id, PCA_InitTypeDef *PCAx)
 107          {
 108   1          if(PCA_id > PCA_Counter)
 109   1          {
 110   2              return;    //id??
 111   2          }
 112   1          if(PCA_id == PCA_Counter)           //????Counter
 113   1          {
 114   2              CR = 0;
 115   2              CH = 0;
 116   2              CL = 0;
C51 COMPILER V8.05a   PCA                                                                  08/09/2017 16:25:16 PAGE 3   

 117   2              AUXR1 = (AUXR1 & ~(3<<4)) | PCAx->PCA_IoUse;            //??IO?
 118   2              CMOD  = (CMOD  & ~(7<<1)) | PCAx->PCA_Clock;            //?????
 119   2              CMOD  = (CMOD  & ~1) | (PCAx->PCA_Interrupt_Mode & 1);  //ECF
 120   2              if(PCAx->PCA_Polity == PolityHigh)
 121   2              {
 122   3                  PPCA = 1;    //??????
 123   3              }
 124   2              else
 125   2              {
 126   3                  PPCA = 0;    //??????
 127   3              }
 128   2              CR = 1;
 129   2              return;
 130   2          }
 131   1          PCAx->PCA_Interrupt_Mode &= (3<<4) + 1;
 132   1          if(PCAx->PCA_Mode >= PCA_Mode_SoftTimer)
 133   1          {
 134   2              PCAx->PCA_Interrupt_Mode &= ~(3<<4);
 135   2          }
 136   1          if(PCA_id == PCA0)
 137   1          {
 138   2              CCAPM0    = PCAx->PCA_Mode | PCAx->PCA_Interrupt_Mode;  //????, ????
 139   2              PCA_PWM0  = (PCA_PWM0 & ~(3<<6)) | PCAx->PCA_PWM_Wide;  //PWM??
 140   2              PCA_Timer0 = PCAx->PCA_Value;
 141   2              B_Capture0 = 0;
 142   2              PCA0_mode = PCAx->PCA_Mode;
 143   2              CCAP0_tmp = PCA_Timer0;
 144   2              CCAP0L = (u8)CCAP0_tmp;         //?????????????,??CCAP0L
 145   2              CCAP0H = (u8)(CCAP0_tmp >> 8);  //??CCAP0H
 146   2          }
 147   1          if(PCA_id == PCA1)
 148   1          {
 149   2              CCAPM1    = PCAx->PCA_Mode | PCAx->PCA_Interrupt_Mode;
 150   2              PCA_PWM1  = (PCA_PWM1 & ~(3<<6)) | PCAx->PCA_PWM_Wide;
 151   2              PCA_Timer1 = PCAx->PCA_Value;
 152   2              B_Capture1 = 0;
 153   2              PCA1_mode = PCAx->PCA_Mode;
 154   2              CCAP1_tmp = PCA_Timer1;
 155   2              CCAP1L = (u8)CCAP1_tmp;         //?????????????,??CCAP0L
 156   2              CCAP1H = (u8)(CCAP1_tmp >> 8);  //??CCAP0H
 157   2          }
 158   1          if(PCA_id == PCA2)
 159   1          {
 160   2              CCAPM2    = PCAx->PCA_Mode | PCAx->PCA_Interrupt_Mode;
 161   2              PCA_PWM2  = (PCA_PWM2 & ~(3<<6)) | PCAx->PCA_PWM_Wide;
 162   2              PCA_Timer2 = PCAx->PCA_Value;
 163   2              B_Capture2 = 0;
 164   2              PCA2_mode = PCAx->PCA_Mode;
 165   2              CCAP2_tmp = PCA_Timer2;
 166   2              CCAP2L = (u8)CCAP2_tmp;         //?????????????,??CCAP0L
 167   2              CCAP2H = (u8)(CCAP2_tmp >> 8);  //??CCAP0H
 168   2          }
 169   1      }
 170          void pwmOutPut(u8 PCA_id,unsigned int T,unsigned int duty)
 171          {
 172   1          if(PCA_id == PCA0)
 173   1          {
 174   2              if(duty > 100)
 175   2              {
 176   3                  duty = 100;    //?????????????,?????????
 177   3              }
 178   2              if(duty < 1)
C51 COMPILER V8.05a   PCA                                                                  08/09/2017 16:25:16 PAGE 4   

 179   2              {
 180   3                  duty = 1;    //?????????????,???????2?
 181   3              }
 182   2              CR = 0;                         //??PCA?
 183   2              PCA_Timer0 = (unsigned int)(T*duty/100);                //???????,??????????
 184   2              PWM0_low =(unsigned int) (T*(1-(duty/100)));    //?????PWM??????PCA???????
 185   2              CR = 1;                         //??PCA?
 186   2          }
 187   1          else if(PCA_id == PCA1)
 188   1          {
 189   2              if(duty > 100)
 190   2              {
 191   3                  duty = 100;    //?????????????,?????????
 192   3              }
 193   2              if(duty < 1)
 194   2              {
 195   3                  duty = 1;    //?????????????,???????2?
 196   3              }
 197   2              CR = 0;                         //??PCA?
 198   2              PCA_Timer1 = T*(duty/100);              //???????,??????????
 199   2              PWM1_low = T*(1-(duty/100));    //?????PWM??????PCA???????
 200   2              CR = 1;                         //??PCA?
 201   2          }
 202   1          else if(PCA_id == PCA2)
 203   1          {
 204   2              if(duty > 100)
 205   2              {
 206   3                  duty = 100;    //?????????????,?????????
 207   3              }
 208   2              if(duty < 1)
 209   2              {
 210   3                  duty = 1;    //?????????????,???????2?
 211   3              }
 212   2              CR = 0;                     //??PCA?
 213   2              PCA_Timer2 = T*(duty/100);              //???????,??????????
 214   2              PWM2_low = T*(1-(duty/100));    //?????PWM??????PCA???????
 215   2              CR = 1;                     //??PCA?
 216   2          }
 217   1      }
 218          //========================================================================
 219          // ??: void PCA_Handler (void) interrupt PCA_VECTOR
 220          // ??: PCA??????.
 221          // ??: None
 222          // ??: none.
 223          // ??: V1.0, 2012-11-22
 224          //========================================================================
 225          void    PCA_Handler (void) interrupt PCA_VECTOR
 226          {
 227   1          if(CCF0)        //PCA??0??
 228   1          {
 229   2              CCF0 = 0;       //?PCA??0????
 230   2              if(P25)
 231   2              {
 232   3                  CCAP0_tmp += PCA_Timer0;    //??????,????????????????
 233   3              }
 234   2              else
 235   2              {
 236   3                  CCAP0_tmp += PWM0_low;    //??????,????????????????
 237   3              }
 238   2              CCAP0L = (u8)CCAP0_tmp;         //?????????????,??CCAP0L
 239   2              CCAP0H = (u8)(CCAP0_tmp >> 8);  //??CCAP0H
 240   2          }
C51 COMPILER V8.05a   PCA                                                                  08/09/2017 16:25:16 PAGE 5   

 241   1          if(CCF1)    //PCA??1??
 242   1          {
 243   2              CCF1 = 0;       //?PCA??1????
 244   2              if(P26)
 245   2              {
 246   3                  CCAP1_tmp += PCA_Timer1;    //??????,????????????????
 247   3              }
 248   2              else
 249   2              {
 250   3                  CCAP1_tmp += PWM1_low;    //??????,????????????????
 251   3              }
 252   2              CCAP1L = (u8)CCAP1_tmp;         //?????????????,??CCAP0L
 253   2              CCAP1H = (u8)(CCAP1_tmp >> 8);  //??CCAP0H
 254   2          }
 255   1          if(CCF2)    //PCA??2??
 256   1          {
 257   2              CCF2 = 0;       //?PCA??1????
 258   2              if(P27)
 259   2              {
 260   3                  CCAP2_tmp += PCA_Timer2;    //??????,????????????????
 261   3              }
 262   2              else
 263   2              {
 264   3                  CCAP2_tmp += PWM2_low;    //??????,????????????????
 265   3              }
 266   2              CCAP2L = (u8)CCAP2_tmp;         //?????????????,??CCAP0L
 267   2              CCAP2H = (u8)(CCAP2_tmp >> 8);  //??CCAP0H
 268   2          }
 269   1          /*  if(CF)  //PCA????
 270   1              {
 271   1                  CF = 0;         //?PCA??????
 272   1              }
 273   1          */
 274   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1069    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     21       6
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
