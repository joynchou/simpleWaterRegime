C51 COMPILER V8.05a   ABSTASK                                                              08/10/2017 09:20:23 PAGE 1   


C51 COMPILER V8.05a, COMPILATION OF MODULE ABSTASK
OBJECT MODULE PLACED IN .\absTask.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\SOFTWARE\absTask.c LARGE WARNINGLEVEL(0) BROWSE DEBUG OBJECTEXTEND PR
                    -INT(.\absTask.lst) TABS(2) OBJECT(.\absTask.obj)

line level    source

   1          #include <stdlib.h>
   2          #include "TASK/task.h"
   3          #define TEMPERATURE_UPDATE  15 
   4          #define BUTTON_SCAN 14
   5          #define TIME_UPDATE 13
   6          #define BUTTON_SOUND 12
   7          void taskStart() _task_ 0
   8          {
   9   1        setup();
  10   1        //  blink(3);
  11   1        os_create_task(10);
  12   1        //os_create_task(BUTTON_SCAN);
  13   1        //os_create_task(BUTTON_SOUND);
  14   1        //  os_create_task(TEMPERATURE_UPDATE);
  15   1        //  os_create_task(TIME_UPDATE);
  16   1        os_delete_task(0);
  17   1      
  18   1      }
  19          void printDistance(void) _task_ 5
  20          {
  21   1        for (;;)
  22   1        {
  23   2          DataScope_Get_Channel_Data(getADS1115ConvsionData(0)*(-0.00070804f) + 12.8156709f, 1);
  24   2      
  25   2          sendScopeData(1);
  26   2          os_wait(K_TMO, 30, 0);
  27   2        }
  28   1      }
  29          void printTmp()  _task_  9
  30          {
  31   1        for (;;)
  32   1        {
  33   2          getDS18B20_Temperature(0);
  34   2          //    DataScope_Get_Channel_Data(getDS18B20_Temperature(0));
  35   2          //    sendScopeData(1);
  36   2          os_wait(K_TMO, 30, 0);
  37   2        }
  38   1      }
  39          void Distance(void)  _task_ 10
  40          {
  41   1        for (;;)
  42   1        {
  43   2        updateDistance(US_100_1);
  44   2        DataScope_Get_Channel_Data( getdistance(US_100_1), 1);
  45   2        sendScopeData(1);
  46   2        os_wait(K_TMO, 100, 0);
  47   2        }
  48   1      }
  49          //时间更新进程，频率5hz
  50          void TimeUpdate(void) _task_ TIME_UPDATE
  51          {
  52   1        for (;;)
  53   1        {
  54   2      
C51 COMPILER V8.05a   ABSTASK                                                              08/10/2017 09:20:23 PAGE 2   

  55   2          os_wait(K_IVL, 200, 0);
  56   2        }
  57   1      }
  58          //温度计数值更新进程，频率10hz
  59          void  TemperatureUpdata(void) _task_ TEMPERATURE_UPDATE
  60          {
  61   1        for (;;)
  62   1        {
  63   2      
  64   2      
  65   2          os_wait(K_IVL, 100, 0);
  66   2      
  67   2        }
  68   1      }
  69          //键盘按键声发出进程，频率50hz
  70          void ButtonSound(void) _task_ BUTTON_SOUND
  71          {
  72   1        for (;;)
  73   1        {
  74   2          if (getButtonNum())
  75   2          {
  76   3            buzzWait();
  77   3          }
  78   2          os_wait(K_IVL, 20, 0);
  79   2        }
  80   1      
  81   1      }
  82          //按键扫描进程，50hz
  83          void ButtonStateUpdate(void) _task_ BUTTON_SCAN
  84          {
  85   1        for (;;)
  86   1        {
  87   2          buttonScan();
  88   2      
  89   2      
  90   2          os_wait(K_IVL, 20, 0);
  91   2      
  92   2        }
  93   1      
  94   1      }
  95          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    187    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
